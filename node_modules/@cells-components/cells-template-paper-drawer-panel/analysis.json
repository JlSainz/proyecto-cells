{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "## A set of zones elements for your template. It includes:\n\n`<cells-template-paper-drawer-panel>` contains a drawer panel and a main panel. The drawer and the main panel are side-by-side with drawer on the left.\n\n  ```app__header``` - A container element for top app.\n\n  ```app__main``` - A container element main content and general manager scroll.\n\n  ```app__footer``` - A container element for bottom app.\n\n  ```app__complementary``` - A container element for drawer. [```Navigation drawer*```](https://www.google.com/design/spec/patterns/navigation-drawer.html)\n\n  ```app__overlay``` - A container element for overlay all content.\n\n  ```app__transactional``` - A container element that positions transverse layers.\n\n[__*The navigation drawer slides in from the left and contains the navigation destinations for your app.__](https://www.google.com/design/spec/patterns/navigation-drawer.html)\n\nExample cells context: *(view demo for declarative app)*\n```html\n<cells-template-paper-drawer-panel></cells-template-paper-drawer-panel>\n\n<cells-template-paper-drawer-panel right-drawer drawer-width=\"300px\"></cells-template-paper-drawer-panel>\n```\n## Styling\n\nThe following custom properties are available for styling:\n\n### Custom Properties\n| Custom Property                                          | Selector                                                       | CSS Property     | Value                                                    |\n| -------------------------------------------------------- | -------------------------------------------------------------- | ---------------- | -------------------------------------------------------- |\n| --cells-template-paper-drawer-panel-footer-height        | :host([footer-fixed]) > --cells-paper-scroll-header-container: | padding-bottom   |  60px                                                    |\n| --cells-template-paper-drawer-panel-footer-bg-color      | :host([has-footer]) .app__footer                               | background-color |  ![#fff](https://placehold.it/15/fff/000000?text=+) #fff |\n| --cells-template-paper-drawer-panel-footer-height        | :host([has-footer]) .app__footer                               | height           |  60px                                                    |\n| --cells-template-paper-drawer-panel-section-zindex       | .app__section                                                  | z-index          |  0                                                       |\n| --cells-template-paper-drawer-panel-section-bg           | .app__section                                                  | background-color |  ![#fff](https://placehold.it/15/fff/000000?text=+) #fff |\n| --cells-template-paper-drawer-panel-header-zindex        | .app__header                                                   | z-index          |  0                                                       |\n| --cells-template-paper-drawer-panel-main-padding-top     | .app__main                                                     | padding-top      |  0                                                       |\n| --cells-template-paper-drawer-panel-main-padding-bottom  | .app__main                                                     | padding-bottom   |  0                                                       |\n| --cells-template-paper-drawer-panel-complementary-width  | .app__complementary                                            | width            |  100%                                                    |\n| --cells-template-paper-drawer-panel-complementary-zindex | .app__complementary                                            | z-index          |  0                                                       |\n| --cells-template-paper-drawer-panel-overlay-zindex       | .app__overlay                                                  | z-index          |  0                                                       |\n| --cells-template-paper-drawer-panel-transactional-zindex | .app__transactional                                            | z-index          |  0                                                       |",
      "summary": "",
      "path": "cells-template-paper-drawer-panel.js",
      "properties": [
        {
          "name": "rightDrawer",
          "type": "boolean | null | undefined",
          "description": "If true, position the drawer to the right.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 72,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "headerHidden",
          "type": "boolean | null | undefined",
          "description": "Hides the header.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disableEdgeSwipe",
          "type": "boolean | null | undefined",
          "description": "If true, swipe to open/close the drawer is disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disableSwipe",
          "type": "boolean | null | undefined",
          "description": "If true, swipe to open/close the drawer is disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "edgeSwipeSensitivity",
          "type": "number | null | undefined",
          "description": "How many pixels on the side of the screen are sensitive to edge swipes and peek.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "scaleContent",
          "type": "boolean | null | undefined",
          "description": "Open menu with scale animation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "relativeMain",
          "type": "boolean | null | undefined",
          "description": "Choose add css attribute position:relative in main content ('false', or 'true').",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "drawerWidth",
          "type": "string | null | undefined",
          "description": "The width of the drawer.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "headerFixed",
          "type": "boolean | null | undefined",
          "description": "If true, the header is fixed to the top and never moves away.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disableScrollLock",
          "type": "boolean | null | undefined",
          "description": "Sets wheter to disable scrolling when the menu is opened.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabledScrollerReset",
          "type": "boolean | null | undefined",
          "description": "Set to true to prevent reset the scroll in cached templates",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "scrollerNode",
          "type": "string | null | undefined",
          "description": "Selector of the template element that has the scrolling area",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_scrollerNode",
          "type": "Object | null | undefined",
          "description": "HTML element responsible for managing the scroll",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "configurationsNumber",
          "type": "number | null | undefined",
          "description": "Notifies number of configurations items",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "footerHeight",
          "type": "number | null | undefined",
          "description": "Footer height in px.\nCan be set either by using a custom CSS property (--app__footer-height) or by setting\nfooterHeight. Default value for --app__footer-height is 60px.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "hasFooter",
          "type": "boolean | null | undefined",
          "description": "Set to true if the template has footer or coexists with a external footer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "footerFixed",
          "type": "boolean | null | undefined",
          "description": "If true, the footer is fixed to the bottom and never moves away.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 2
            },
            "end": {
              "line": 241,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 2
            },
            "end": {
              "line": 250,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 2
            },
            "end": {
              "line": 307,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "toggleMenu",
          "description": "Open/closes the menu panel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 2
            },
            "end": {
              "line": 314,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 316,
              "column": 2
            },
            "end": {
              "line": 327,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setMenuOpened",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 2
            },
            "end": {
              "line": 345,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onSelectedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 347,
              "column": 2
            },
            "end": {
              "line": 361,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addOverflow",
          "description": "Add scroll bar",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 2
            },
            "end": {
              "line": 368,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeOverflow",
          "description": "Remove scroll bar",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 2
            },
            "end": {
              "line": 375,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_scrollerNodeChanged",
          "description": "Fired when get scroll node. Sends the scroller node.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 2
            },
            "end": {
              "line": 391,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "scrollerControl"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onChangeAnimation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 2
            },
            "end": {
              "line": 396,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ev"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onContentScroll",
          "description": "Fired when the content has been scrolled.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 403,
              "column": 2
            },
            "end": {
              "line": 410,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ev"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupFooter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasFooter"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onHeaderTransform",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 2
            },
            "end": {
              "line": 426,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 58,
          "column": 0
        },
        "end": {
          "line": 427,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "CellsTemplatePaperDrawerPanel",
      "attributes": [
        {
          "name": "right-drawer",
          "description": "If true, position the drawer to the right.",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 72,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "header-hidden",
          "description": "Hides the header.",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-edge-swipe",
          "description": "If true, swipe to open/close the drawer is disabled.",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-swipe",
          "description": "If true, swipe to open/close the drawer is disabled.",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "edge-swipe-sensitivity",
          "description": "How many pixels on the side of the screen are sensitive to edge swipes and peek.",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "scale-content",
          "description": "Open menu with scale animation.",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "relative-main",
          "description": "Choose add css attribute position:relative in main content ('false', or 'true').",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "drawer-width",
          "description": "The width of the drawer.",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "header-fixed",
          "description": "If true, the header is fixed to the top and never moves away.",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-scroll-lock",
          "description": "Sets wheter to disable scrolling when the menu is opened.",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled-scroller-reset",
          "description": "Set to true to prevent reset the scroll in cached templates",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "scroller-node",
          "description": "Selector of the template element that has the scrolling area",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "configurations-number",
          "description": "Notifies number of configurations items",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "footer-height",
          "description": "Footer height in px.\nCan be set either by using a custom CSS property (--app__footer-height) or by setting\nfooterHeight. Default value for --app__footer-height is 60px.",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "has-footer",
          "description": "Set to true if the template has footer or coexists with a external footer",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "footer-fixed",
          "description": "If true, the footer is fixed to the bottom and never moves away.",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "menu-opened-changed",
          "description": "Notifies if the menu is opened or not.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "scroller-control",
          "description": "Fired when get scroll node. Sends the scroller node.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Notifies changes on the selected value.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "template-content-scroll",
          "description": "Fired when the content has been scrolled.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-template-paper-drawer-panel",
      "mixins": [
        "CellsTemplateAnimationMixin"
      ]
    }
  ]
}
