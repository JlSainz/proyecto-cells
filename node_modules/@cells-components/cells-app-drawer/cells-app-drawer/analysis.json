{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<cells-app-drawer>` contains a drawer panel and a main panel.  The drawer\nand the main panel are side-by-side with drawer on the left.  When the browser\nwindow size is smaller than the `responsiveWidth`, `cells-app-drawer`\nchanges to narrow layout.  In narrow layout, the drawer will be stacked on top\nof the main panel.  The drawer will slide in/out to hide/reveal the main\npanel.\n\nUse the attribute `drawer` to indicate that the element is the drawer panel and\n`main` to indicate that the element is the main panel.\n\nExample:\n```html\n<cells-app-drawer>\n  <div slot=\"drawer\"> Drawer panel... </div>\n  <div slot=\"main\"> Main panel... </div>\n</cells-app-drawer>\n```\n\nThe drawer and the main panels are not scrollable.  You can set CSS overflow\nproperty on the elements to make them scrollable or use `paper-header-panel`.\n\nExample:\n```html\n<cells-app-drawer>\n  <paper-header-panel slot=\"drawer\">\n    <paper-toolbar></paper-toolbar>\n    <div> Drawer content... </div>\n  </paper-header-panel>\n  <paper-header-panel slot=\"main\">\n    <paper-toolbar></paper-toolbar>\n    <div> Main content... </div>\n  </paper-header-panel>\n</cells-app-drawer>\n```\n\nAn element that should toggle the drawer will automatically do so if it's\ngiven the `paper-drawer-toggle` attribute.  Also this element will automatically\nbe hidden in wide layout.\n\nExample:\n```html\n<cells-app-drawer>\n  <paper-header-panel slot=\"drawer\">\n    <paper-toolbar>\n      <div>Application</div>\n    </paper-toolbar>\n    <div> Drawer content... </div>\n  </paper-header-panel>\n  <paper-header-panel slot=\"main\">\n    <paper-toolbar>\n      <paper-icon-button icon=\"menu\" paper-drawer-toggle></paper-icon-button>\n      <div>Title</div>\n    </paper-toolbar>\n    <div> Main content... </div>\n  </paper-header-panel>\n</cells-app-drawer>\n```\n\nTo position the drawer to the right, add `right-drawer` attribute.\n\n```html\n<cells-app-drawer right-drawer>\n  <div slot=\"drawer\"> Drawer panel... </div>\n  <div slot=\"main\"> Main panel... </div>\n</cells-app-drawer>\n```\n\n## Styling\n\nThe following custom properties are available for styling:\n\n| Custom property | Description | Default |\n| --- | --- | --- |\n| `--cells-app-drawer-scrim-opacity` | Scrim opacity | 1 |\n| `--cells-app-drawer-drawer-container` | Mixin applied to drawer container | {} |\n| `--cells-app-drawer-left-drawer-container` | Mixin applied to container when it's in the left side | {} |\n| `--cells-app-drawer-main-container` | Mixin applied to main container | {} |\n| `--cells-app-drawer-right-drawer-container` | Mixin applied to container when it's in the right side | {} |\n| `--cells-app-drawer-scrim` | Mixin applied to scrim | {} |",
      "summary": "",
      "path": "cells-app-drawer.js",
      "properties": [
        {
          "name": "_mediaQuery",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 2
            },
            "end": {
              "line": 289,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "narrow",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 293,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_drawerStyle",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 2
            },
            "end": {
              "line": 297,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_mainStyle",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 2
            },
            "end": {
              "line": 306,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_cellsSelectorClass",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 2
            },
            "end": {
              "line": 317,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_swipeAllowed",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_isMainSelected",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 325,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "defaultSelected",
          "type": "string | null | undefined",
          "description": "The panel to be selected when `cells-app-drawer` changes to narrow\nlayout.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disableEdgeSwipe",
          "type": "boolean | null | undefined",
          "description": "If true, swipe from the edge is disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disableSwipe",
          "type": "boolean | null | undefined",
          "description": "If true, swipe to open/close the drawer is disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "drawerWidth",
          "type": "string | null | undefined",
          "description": "Width of the drawer panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "edgeSwipeSensitivity",
          "type": "number | null | undefined",
          "description": "How many pixels on the side of the screen are sensitive to edge\nswipes and peek.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "forceNarrow",
          "type": "boolean | null | undefined",
          "description": "If true, ignore `responsiveWidth` setting and force the narrow layout.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasTransform",
          "type": "boolean | null | undefined",
          "description": "Whether the browser has support for the transform CSS property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasWillChange",
          "type": "boolean | null | undefined",
          "description": "Whether the browser has support for the will-change CSS property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "peek",
          "type": "boolean | null | undefined",
          "description": "Enable the drawer to peek out from the edge.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "responsiveWidth",
          "type": "string | null | undefined",
          "description": "Max-width when the panel changes to narrow layout.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "rightDrawer",
          "type": "boolean | null | undefined",
          "description": "If true, position the drawer to the right.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "selected",
          "type": "string | null | undefined",
          "description": "The panel that is being selected. `drawer` for the drawer panel and\n`main` for the main panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "scaleContent",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "drawerToggleAttribute",
          "type": "string | null | undefined",
          "description": "The attribute on elements that should toggle the drawer on tap, also elements will\nautomatically be hidden in wide layout.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "drawerFocusSelector",
          "type": "string | null | undefined",
          "description": "The CSS selector for the element that should receive focus when the drawer is open.\nBy default, when the drawer opens, it focuses the first tabbable element. That is,\nthe first element that can receive focus.\n\nTo disable this behavior, you can set `drawerFocusSelector` to `null` or an empty string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_mediaQueryMatch",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "firstUpdated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 2
            },
            "end": {
              "line": 262,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 2
            },
            "end": {
              "line": 276,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 2
            },
            "end": {
              "line": 285,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 2
            },
            "end": {
              "line": 360,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_responsiveChange",
          "description": "Fired when the narrow layout changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 2
            },
            "end": {
              "line": 380,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setNarrow",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 2
            },
            "end": {
              "line": 398,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setPeeking",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 2
            },
            "end": {
              "line": 411,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setDragging",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 2
            },
            "end": {
              "line": 425,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onQueryMatchesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 427,
              "column": 2
            },
            "end": {
              "line": 430,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_forceNarrowChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 432,
              "column": 2
            },
            "end": {
              "line": 434,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "togglePanel",
          "description": "Toggles the panel open and closed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 2
            },
            "end": {
              "line": 445,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "openDrawer",
          "description": "Opens the drawer.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 450,
              "column": 2
            },
            "end": {
              "line": 455,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "closeDrawer",
          "description": "Closes the drawer.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 2
            },
            "end": {
              "line": 465,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTrack",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 467,
              "column": 2
            },
            "end": {
              "line": 486,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_trackStart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 488,
              "column": 2
            },
            "end": {
              "line": 502,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isEdgeTouch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 504,
              "column": 2
            },
            "end": {
              "line": 507,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_trackX",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 509,
              "column": 2
            },
            "end": {
              "line": 520,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_trackEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 522,
              "column": 2
            },
            "end": {
              "line": 535,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_moveDrawer",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 537,
              "column": 2
            },
            "end": {
              "line": 541,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "translateX"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_transformForTranslateX",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 543,
              "column": 2
            },
            "end": {
              "line": 553,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "translateX"
            }
          ]
        },
        {
          "name": "_startEdgePeek",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 555,
              "column": 2
            },
            "end": {
              "line": 559,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_stopEdgePeek",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 561,
              "column": 2
            },
            "end": {
              "line": 566,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_downHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 568,
              "column": 2
            },
            "end": {
              "line": 576,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_upHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 578,
              "column": 2
            },
            "end": {
              "line": 581,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resetSharedPanel",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 583,
              "column": 2
            },
            "end": {
              "line": 585,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 587,
              "column": 2
            },
            "end": {
              "line": 593,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_translateXForDeltaX",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 595,
              "column": 2
            },
            "end": {
              "line": 602,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "deltaX"
            }
          ]
        },
        {
          "name": "_getDrawerContent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 604,
              "column": 2
            },
            "end": {
              "line": 610,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getAutoFocusedNode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 612,
              "column": 2
            },
            "end": {
              "line": 615,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_toggleFocusListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 617,
              "column": 2
            },
            "end": {
              "line": 623,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_didFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 625,
              "column": 2
            },
            "end": {
              "line": 638,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 98,
          "column": 0
        },
        "end": {
          "line": 659,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "CellsAppDrawer",
      "attributes": [
        {
          "name": "default-selected",
          "description": "The panel to be selected when `cells-app-drawer` changes to narrow\nlayout.",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disable-edge-swipe",
          "description": "If true, swipe from the edge is disabled.",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-swipe",
          "description": "If true, swipe to open/close the drawer is disabled.",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "drawer-width",
          "description": "Width of the drawer panel.",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "edge-swipe-sensitivity",
          "description": "How many pixels on the side of the screen are sensitive to edge\nswipes and peek.",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "force-narrow",
          "description": "If true, ignore `responsiveWidth` setting and force the narrow layout.",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-transform",
          "description": "Whether the browser has support for the transform CSS property.",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-will-change",
          "description": "Whether the browser has support for the will-change CSS property.",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "peek",
          "description": "Enable the drawer to peek out from the edge.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "responsive-width",
          "description": "Max-width when the panel changes to narrow layout.",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "right-drawer",
          "description": "If true, position the drawer to the right.",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected",
          "description": "The panel that is being selected. `drawer` for the drawer panel and\n`main` for the main panel.",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "scale-content",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "drawer-toggle-attribute",
          "description": "The attribute on elements that should toggle the drawer on tap, also elements will\nautomatically be hidden in wide layout.",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "drawer-focus-selector",
          "description": "The CSS selector for the element that should receive focus when the drawer is open.\nBy default, when the drawer opens, it focuses the first tabbable element. That is,\nthe first element that can receive focus.\n\nTo disable this behavior, you can set `drawerFocusSelector` to `null` or an empty string.",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "cells-app-responsive-change",
          "description": "Fired when the narrow layout changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "cells-deselect",
          "description": "Fired when a panel is deselected.\n\nListening for this event is an alternative to observing changes in the `selected` attribute.\nThis event is fired both when a panel is deselected.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "cells-select",
          "description": "Fired when the a panel is selected.\n\nListening for this event is an alternative to observing changes in the `selected` attribute.\nThis event is fired both when a panel is selected.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "dragging-changed",
          "description": "Fired when the panel is being dragged.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "narrow-changed",
          "description": "Fired when the panel is in narrow layout.  This is useful if you\nneed to show/hide elements based on the layout.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "peeking-changed",
          "description": "Fired whether the drawer is peeking out from the edge.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-app-drawer",
      "mixins": [
        "CellsResizableMixin"
      ]
    }
  ]
}
