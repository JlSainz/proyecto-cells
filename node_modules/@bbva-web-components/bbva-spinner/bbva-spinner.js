import { LitElement, html } from 'lit-element';
import { getComponentSharedStyles } from '@cells-components/cells-lit-helpers';
import styles from './bbva-spinner-styles.js';

const uniqueId = () => `${String(Math.floor(Math.random() * Date.now()))}`;

/**
BBVA Spinner animation.

Example:

Progress Loading
```html
<bbva-spinner></bbva-spinner>
```

Progress Content & Progress Element
```html
<bbva-spinner with-mask></bbva-spinner>
```

You can set a specific size through CSS custom properties or directly through the 'size' property.

```html
<bbva-spinner size="200"></bbva-spinner>
```

If 'paused' property is set to true, component will not be animating.
```html
<bbva-spinner paused></bbva-spinner>
```

## Styling

The following custom properties are available for styling:

### Custom properties

| Selector                      | CSS Property                      | CSS Variable                            | Theme Variable                    | Foundations/Fallback |
| ----------------------------- | --------------------------------- | --------------------------------------- | --------------------------------- | -------------------- |
| .cls-2                        | fill                              | --bbva-spinner-background               |                                   |                      |
| .Gradient-3 stop:nth-child(2) | stop-color                        | --bbva-spinner-primary-gradient         |                                   |                      |
| .Gradient-3 stop:nth-child(1) | stop-color                        | --bbva-spinner-primary-gradient         |                                   |                      |
| .Gradient-2 stop:nth-child(2) | stop-color                        | --bbva-spinner-secondary-gradient       |                                   |                      |
| .Gradient-2 stop:nth-child(1) | stop-color                        | --bbva-spinner-primary-gradient         |                                   |                      |
| .Gradient-1 stop:nth-child(2) | stop-color                        | --bbva-spinner-secondary-gradient       |                                   |                      |
| .Gradient-1 stop:nth-child(1) | stop-color                        | --bbva-spinner-primary-gradient         |                                   |                      |
| .Gradient-0 stop:nth-child(2) | stop-color                        | --bbva-spinner-secondary-gradient       |                                   |                      |
| .Gradient-0 stop:nth-child(1) | stop-color                        | --bbva-spinner-primary-gradient         |                                   |                      |
| figure                        | margin                            | --bbva-spinner-center                   |                                   | auto                 |
| figure                        | width                             | --bbva-spinner-size                     |                                   | 3rem                 |
| :host                         | --bbva-spinner-primary-gradient   | --bbva-spinner-primary-gradient-color   |                                   | #2dcccd              |
| :host                         | --bbva-spinner-secondary-gradient | --bbva-spinner-secondary-gradient-color |                                   | #004481              |
| :host                         | --bbva-spinner-background         | --bbva-spinner-background-color         | --bbva-spinner-secondary-gradient |                      |

### at-Rules

| Identifier | Step | Selector | CSS Property | CSS Variable | Theme Variable | Foundations/Fallback |
| ---------- | ---- | -------- | ------------ | ------------ | -------------- | -------------------- |
| Gradient_f | 100% |          | fill         | --gradient-2 |                |                      |
| Gradient_f | 50%  |          | fill         | --gradient-1 |                |                      |
| Gradient_f | 0%   |          | fill         | --gradient-0 |                |                      |
> Styling documentation generated by Cells CLI

@customElement bbva-spinner
@polymer
@LitElement
@demo demo/index.html
*/
class BbvaSpinner extends LitElement {
  static get is() {
    return 'bbva-spinner';
  }

  static get properties() {
    return {
      /**
       * Specific width and height (in pixels) for the SVG container
       */
      size: {
        type: Number,
      },

      /**
       * If true, animation is paused
       */
      paused: {
        type: Boolean,
        reflect: true,
      },

      /**
       * If true, central mask is enabled
       */
      withMask: {
        type: Boolean,
        attribute: 'with-mask',
        reflect: true,
      },
    };
  }

  constructor() {
    super();
    this.paused = false;
    this.withMask = false;
    this._uniqueId = uniqueId();
  }

  firstUpdated() {
    this.style.setProperty('--gradient-0', `url(#Gradient-0_${this._uniqueId})`);
    this.style.setProperty('--gradient-1', `url(#Gradient-1_${this._uniqueId})`);
    this.style.setProperty('--gradient-2', `url(#Gradient-2_${this._uniqueId})`);
  }

  get _computeClipPath() {
    return this.withMask ? `url(#ClipPath-1_${this._uniqueId})` : '';
  }

  get _computeSize() {
    return typeof this.size === 'number' ? `width: ${this.size}px;` : '';
  }

  static get styles() {
    return [styles, getComponentSharedStyles('bbva-spinner-shared-styles')];
  }

  render() {
    return html`
      <figure style="${this._computeSize}">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 400" id="${this._uniqueId}">
          <defs>
            <filter id="Filter-0_${this._uniqueId}" color-interpolation-filters="sRGB">
              <feComponentTransfer>
                <feFuncR type="linear" slope="1.2" />
                <feFuncG type="linear" slope="1.2" />
                <feFuncB type="linear" slope="1.2" />
              </feComponentTransfer>
            </filter>
            <filter id="Filter-1_${this._uniqueId}" color-interpolation-filters="sRGB">
              <feComponentTransfer>
                <feFuncR type="linear" slope="2" />
                <feFuncG type="linear" slope="2" />
                <feFuncB type="linear" slope="2" />
              </feComponentTransfer>
            </filter>
            <filter id="Filter-2_${this._uniqueId}" color-interpolation-filters="sRGB">
              <feGaussianBlur stdDeviation="20" />
              <feComponentTransfer>
                <feFuncR type="linear" slope="2" />
                <feFuncG type="linear" slope="2" />
                <feFuncB type="linear" slope="2" />
              </feComponentTransfer>
            </filter>
            <radialGradient
              id="Gradient-0_${this._uniqueId}"
              class="Gradient-0"
              cx="199"
              cy="92"
              r="271.854"
              fx="197.801"
              fy="-27.9043"
              gradientUnits="userSpaceOnUse"
            >
              <stop offset="0.143991" stop-color="#2dcccd" />
              <stop offset="1" stop-color="#004481" stop-opacity="0" />
            </radialGradient>
            <radialGradient
              id="Gradient-1_${this._uniqueId}"
              class="Gradient-1"
              cx="199"
              cy="92"
              r="271.854"
              fx="197.801"
              fy="-27.9043"
              gradientUnits="userSpaceOnUse"
            >
              <stop offset="0.133991" stop-color="#2dcccd" />
              <stop offset="1" stop-color="#004481" stop-opacity="0" />
            </radialGradient>
            <radialGradient
              id="Gradient-2_${this._uniqueId}"
              class="Gradient-2"
              cx="199"
              cy="92"
              r="271.854"
              fx="197.801"
              fy="-27.9043"
              gradientUnits="userSpaceOnUse"
            >
              <stop offset="0.153991" stop-color="#2dcccd" />
              <stop offset="1" stop-color="#004481" stop-opacity="0" />
            </radialGradient>
            <radialGradient
              id="Gradient-3_${this._uniqueId}"
              class="Gradient-3"
              cx="196.5"
              cy="0"
              r="100"
              fx="196.5"
              fy="0"
              gradientUnits="userSpaceOnUse"
            >
              <stop offset="0" stop-color="#2dcccd" />
              <stop offset="1" stop-color="#2dcccd" stop-opacity="0" />
            </radialGradient>
            <clipPath id="clip-path_${this._uniqueId}">
              <ellipse
                class="cls-1"
                rx="197.5"
                ry="197.5"
                fill="none"
                transform="translate(0,0) translate(200,200)"
              />
            </clipPath>
            <mask id="Mask-1_${this._uniqueId}" style="mask-type: luminance;">
              <path
                d="M-0.66667,0C-0.66667,0,50.5,85,167,85C281.5,85,334,0,334,0C334,0,281.5,93,167,93C50.5,93,-0.66667,0,-0.66667,0Z"
                fill="#4afcfd"
                stroke-linecap="square"
                stroke="none"
                filter="url(#Filter-2_${this._uniqueId})"
                class="Filter-2"
                transform="translate(-166.5,104.5)"
                style="mix-blend-mode: normal;"
              />
            </mask>
            <clipPath id="ClipPath-1_${this._uniqueId}">
              <path
                class="st0"
                d="M400,0L0,0L0,400L400,400ZM45.9596,200C45.9596,115.061,115.061,45.9596,200,45.9596C284.939,45.9596,354.04,115.061,354.04,200C354.04,284.939,284.939,354.04,200,354.04C115.061,354.04,45.9596,284.939,45.9596,200Z"
                fill="#00ff16"
                fill-rule="evenodd"
              />
            </clipPath>
          </defs>
          <g
            class="All_Grouped"
            clip-path="${this._computeClipPath}"
            transform="translate(200,200) translate(-200,-200)"
          >
            <ellipse
              class="cls-2"
              rx="197.5"
              ry="197.5"
              fill="#004481"
              transform="translate(0,0) translate(200,200)"
            />
            <path
              class="cls-1"
              d="M196.5,0C87.9723,0,0,87.9723,0,196.5C0,305.028,87.9723,393,196.5,393C305.028,393,393,305.028,393,196.5C393,87.9723,305.028,0,196.5,0Z"
              fill="none"
              opacity="0.16"
              stroke="#f2f2f2"
              stroke-width="2"
              transform="translate(3.5,3.5)"
            />
            <g class="cls-5" clip-path="url(#clip-path_${this._uniqueId})">
              <g class="Gradient">
                <path
                  class="cls-6"
                  d="M400,0L400,400L0,400L0,0Z"
                  fill="url(#Gradient-0_${this._uniqueId})"
                  opacity="1"
                  filter="url(#Filter-0_${this._uniqueId})"
                  fill-opacity="0.6"
                  fill-rule="nonzero"
                  stroke-opacity="1"
                  transform="translate(0,0) scale(1,0.7)"
                />
              </g>
            </g>
            <ellipse
              rx="197.5"
              ry="197.5"
              fill="#4efeff"
              stroke="none"
              fill-rule="evenodd"
              filter="url(#Filter-1_${this._uniqueId})"
              mask="url(#Mask-1_${this._uniqueId})"
              transform="translate(199.5,199.5) rotate(180)
            translate(-0.5,-0.5)"
              style="mix-blend-mode: normal;"
            />
            <path
              class="cls-1"
              d="M196.5,0C87.9723,0,0,87.9723,0,196.5C0,305.028,87.9723,393,196.5,393C305.028,393,393,305.028,393,196.5C393,87.9723,305.028,0,196.5,0Z"
              fill="none"
              opacity="0.8"
              stroke="url(#Gradient-3_${this._uniqueId})"
              stroke-width="2"
              transform="translate(3.5,3.5)"
            />
          </g>
        </svg>
      </figure>
    `;
  }
}

customElements.define(BbvaSpinner.is, BbvaSpinner);
